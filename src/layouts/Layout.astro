---
import "@/styles/global.css";
import Navbar from "@/components/navbar.astro";
import PaddingX from "@/components/padding-x";

interface Props {
  title?: string;
  description?: string;
}

const { title, description = "A collection of works" } = Astro.props;

const pageTitle = title ? `${title} - Max Fung` : "Max Fung";
---

<!doctype html>
<html lang="en">
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <meta name="description" content={description} />
  <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  <meta name="generator" content={Astro.generator} />
  <title>{pageTitle}</title>

  <body>
    <Navbar client:load />
    <PaddingX className="py-4 lg:py-[2vw]">
      <slot />
    </PaddingX>
  </body>
  <script is:inline>
    const getThemePreference = () => {
      if (
        typeof localStorage !== "undefined" &&
        localStorage.getItem("theme")
      ) {
        return localStorage.getItem("theme");
      }
      return window.matchMedia("(prefers-color-scheme: dark)").matches
        ? "dark"
        : "light";
    };
    const isDark = getThemePreference() === "dark";
    document.documentElement.classList[isDark ? "add" : "remove"]("dark");

    if (typeof localStorage !== "undefined") {
      const observer = new MutationObserver(() => {
        const isDark = document.documentElement.classList.contains("dark");
        localStorage.setItem("theme", isDark ? "dark" : "light");
      });
      observer.observe(document.documentElement, {
        attributes: true,
        attributeFilter: ["class"],
      });
    }
  </script>
</html>
