---
import Layout from "@/layouts/layout.astro";
import PrevNext from "@/components/prev-next.astro";
import WritingSummary from "@/components/writing/writing-summary.astro";
import WritingFooter from "@/components/writing/writing-footer.astro";
import { getWritings } from "@/lib/get-collection";
import { getPrevNext } from "@/lib/get-prev-next";

export async function getStaticPaths() {
	const writings = await getWritings();
	return writings.map((writing) => ({
		params: { slug: writing.slug },
		props: { writing },
	}));
}

const { writing } = Astro.props;
const { Content } = await writing.render();

const writings = await getWritings();
const { prevEntry, nextEntry } = getPrevNext(writings, writing.slug);
---

<Layout title={writing.data.title}>
	<div class="flex flex-col gap-12 px-4 pt-8">
		<header class="mx-auto flex max-w-screen-sm flex-col items-center gap-6 text-center">
			<WritingSummary writing={writing} />
			<h1 class="text-4xl font-medium md:text-5xl">
				{writing.data.title}
			</h1>
		</header>
		<article class="mx-auto w-full max-w-screen-lg pt-8">
			<div class="prose">
				<Content />
			</div>
		</article>

		<footer class="bg-muted text-muted-foreground rounded-lg border p-6">
			<div class="mx-auto max-w-screen-sm">
				<WritingFooter />
			</div>
		</footer>

		{
			(prevEntry || nextEntry) && (
				<PrevNext
					prev={
						prevEntry
							? {
									label: prevEntry.title,
									href: `/writing/${prevEntry.slug}`,
								}
							: undefined
					}
					next={
						nextEntry
							? {
									label: nextEntry.title,
									href: `/writing/${nextEntry.slug}`,
								}
							: undefined
					}
				/>
			)
		}
	</div>
</Layout>
