---
import { WorksCategory, WritingCategory } from "@/config/categories";
import { capitalize, getCategoryPath } from "@/lib/utils";
import { collections } from "@/content/config";
import CategorySelectorLink from "./category-selector-link.astro";

type CollectionType = keyof typeof collections;

interface Props {
  type: CollectionType;
}

const { type } = Astro.props;
const currentPath = Astro.url.pathname;
const allPath = type === "works" ? "/" : `/${type}`;
const allIsActive = currentPath === allPath;

const categoryMap = {
  works: WorksCategory,
  writing: WritingCategory,
} as const;

const categories = Object.values(categoryMap[type]);

const isActive = (category: string) => {
  return currentPath.includes(category.toLowerCase());
};
---

<div class="relative">
  <!-- Gradient edges -->
  <div class="pointer-events-none absolute inset-y-0 left-0 w-5 bg-gradient-to-r from-background to-transparent z-10 -ml-5" />
  <div class="pointer-events-none absolute inset-y-0 right-0 w-5 bg-gradient-to-l from-background to-transparent z-10 -mr-5" />

  <!-- Scroll container -->
  <div class="overflow-x-auto scrollbar-none -mx-4 px-4 overscroll-contain touch-auto hide-scrollbar">
    <ul class="flex items-center gap-6 min-w-max pr-5">
      <li>
        <CategorySelectorLink href={allPath} isActive={allIsActive}>
          All
        </CategorySelectorLink>
      </li>
      {categories.map((category) => (
        <li>
          <CategorySelectorLink
            href={getCategoryPath(category, `/${type}`)}
            isActive={isActive(category)}
          >
            {capitalize(category)}
          </CategorySelectorLink>
        </li>
      ))}
    </ul>
  </div>
</div>
